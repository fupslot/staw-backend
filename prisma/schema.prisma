// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Site {
  id Int @id @default(autoincrement())
  display_name String @db.VarChar(100) @unique 
  alias String @db.VarChar(32) @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  users User[]
  invites Invite[]

  oauthServers OAuth2Server[]
}

model User {
  id Int @id @default(autoincrement())
  first_name String @db.VarChar(100)
  last_name String @db.VarChar(100)
  username String @db.VarChar(100)
  email String @db.VarChar(100)

  site_id Int
  site Site @relation(fields: [site_id], references:[id])

  profile Profile?
}

model Profile {
  id Int @id @default(autoincrement())
  bio String @db.VarChar()

  user_id Int
  user User @relation(fields: [user_id], references:[id])
}

model Invite {
  id Int @id @default(autoincrement())
  code String @db.VarChar(100) @unique
  email String @db.VarChar(100)
  active Boolean @db.Boolean @default(true)
  invite_uri String @db.VarChar()
  expire_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  site Site @relation(fields: [site_id], references: [id])
  site_id Int
}

model OAuth2Server {
  id Int @id @default(autoincrement())
  name String @db.VarChar(50)
  applications OAuth2Application[]

  site Site @relation(fields: [site_id], references:[id])
  site_id Int
}

enum AuthType {
  Web
  Spa
  Native
}

enum AuthMethod {
  OIDC
  // SAML
}

model OAuth2Application {
  id Int @id @default(autoincrement())

  method AuthMethod @default(OIDC)
  type AuthType @default(Web)
  
  client_id String @db.VarChar(256)
  client_secret String @db.VarChar(256)
  redirect_uri String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  server_id Int
  server OAuth2Server @relation(fields: [server_id], references:[id])
}